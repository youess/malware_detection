# coding: utf-8

import conf
import fire
import pandas as pd

pd.set_option("display.max.rows", 10000)


def load_raw_data(cfg):
    train = pd.read_csv(cfg.train_file, dtype=cfg.get_dtypes(), index_col=0)
    test = pd.read_csv(cfg.test_file, dtype=cfg.get_dtypes(), index_col=0)
    return train, test

def clean_df(df):
    pass


def transform_csv2libsvm(data_file, is_train=True):
    """转换csv文件为libsvm格式
    """
    pass


def main(**opt):

    debug = opt.get("debug", False)
    if debug:
        cfg = conf.DevConf()
    else:
        cfg = conf.ProdConf()

    train, test = load_raw_data(cfg)

    # refer pandas.profiling report, do some feature tidy
    yc = "HasDetections"
    fc = train[train.columns != yc].tolist()   # 特征列名

    # identifier id, 都转换成category吧
    identifier_fc = [
        "AVProductStatesIdentifier", # na -> 0
        "",
    ]

    # count numeric, do some na filling
    count_fc = [
        'AVProductsEnabled',    # na -> 0
        'AVProductsInstalled',  # na -> 0
    ]
    # other fc keep same as it is



if __name__ == "__main__":
    fire.Fire(main)
